<?xml version="1.0" encoding="UTF-8" ?>
<ContentView xmlns="http://xamarin.com/schemas/2014/forms" 
             xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
             xmlns:inputLayout="clr-namespace:Syncfusion.XForms.TextInputLayout;assembly=Syncfusion.Core.XForms"
             xmlns:local="clr-namespace:Vertical.CustomViews"
             xmlns:stateContainerDemo="clr-namespace:Xamarin.Forms.Essentials.Controls;assembly=Xamarin.Forms.Essentials.Controls"
             xmlns:views="clr-namespace:Vertical.Views"
             xmlns:converters="clr-namespace:Vertical.Views.Converters"
             xmlns:input="clr-namespace:Plugin.InputKit.Shared.Controls;assembly=Plugin.InputKit"
             x:Class="Vertical.Views.CheckListView"
             BackgroundColor="White"
             x:Name="thisPage">
    <ContentView.Resources>
        <ResourceDictionary>
            <DataTemplate x:Key="groupTemplate">
                <Label x:Name="groupNamelabel" 
                       IsVisible="{Binding Key, Converter={converters:GroupNameVisibleConverter}}"
                       Text="{Binding Key}" FontSize="Subtitle" FontAttributes="Bold" TextColor="Black" />
            </DataTemplate>
            <DataTemplate x:Key="boolTemplate">
                <Frame x:Name="Item" Padding="1" HasShadow="False" BorderColor="{StaticResource LightGreyColor}" CornerRadius="0">
                    <StackLayout Spacing="0">
                        <Label Text="{Binding Name}" TextColor="Black" FontSize="Caption" Margin="5"/>
                        <input:CheckBox Margin="5,3" BoxSizeRequest="40"
                                        CheckChangedCommand="{Binding Source={x:Reference thisPage}, Path = BindingContext.IsCheckedCommand}" 
                                        CommandParameter="{Binding Source={x:Reference Item}, Path=BindingContext}"
                                        Color="{StaticResource GreenColor}" BorderColor="{StaticResource LightGreyColor}"
                                        Type="Material"
                                        IsChecked="{Binding Value}" 
                                        IsEnabled="{Binding Locked}"
                                        />
                    </StackLayout>
                </Frame>
            </DataTemplate>
            <DataTemplate x:Key="dateTimeTemplate">
                <StackLayout>
                    <inputLayout:SfTextInputLayout
                            Style="{x:StaticResource SfTextInputLayoutStyle}"
                            UnfocusedColor="Black"
                            HelperText="{Binding Name}"
                            Margin="0,0,0,10"
                        IsEnabled="{Binding Locked}">
                        <DatePicker MinimumDate="{Binding Source={x:Reference thisPage}, Path = BindingContext.MinDate }"
                                MaximumDate="{Binding Source={x:Reference thisPage}, Path = BindingContext.MaxDate}"
                                Date="{Binding Value}"
                                Format="dd.MM.yyyy"
                                FontSize="Caption" TextColor="#737373"
                                    DateSelected="DatePicker_DateSelected"/>
                    </inputLayout:SfTextInputLayout>
                    
                </StackLayout>
                
            </DataTemplate>
            <DataTemplate x:Key="floatTemplate">
                <!--<inputLayout:SfTextInputLayout
                    Style="{x:StaticResource SfTextInputLayoutStyle}"
                    UnfocusedColor="Black"
                    HelperText="{Binding Name}"
                    Margin="0,0,0,10"
                    IsEnabled="{Binding Locked}">
                    <Entry Text="{Binding Value, Mode=TwoWay}"
                           FontSize="Caption" BindingContext="{Binding}" TextChanged="Entry_TextChanged_float"/>
                </inputLayout:SfTextInputLayout>-->
                <input:AdvancedEntry
                    Text="{Binding Value}"
                    TextColor="Black"
                    Title="{Binding Name}"
                    Margin="0,0,0,10"
                    IsEnabled="{Binding Locked}"
                    Annotation="Decimal"
                    Completed="AdvancedEntry_Completed"
                    TextChanged="Entry_TextChanged_float"
                    BindingContext="{Binding}"
                    />
            </DataTemplate>
            <DataTemplate x:Key="intTemplate">
                <inputLayout:SfTextInputLayout                            
                    Style="{x:StaticResource SfTextInputLayoutStyle}"
                    HelperText="{Binding Name}"
                    UnfocusedColor="Black"
                    IsEnabled="{Binding Source={x:Reference thisPage}, Path = BindingContext.Locked}">
                    <Entry Text="{Binding Value}" 
                           FontSize="Caption" BindingContext="{Binding}"/>
                </inputLayout:SfTextInputLayout>
            </DataTemplate>
            <DataTemplate x:Key="arrayTemplate">
                <Frame Padding="0" BorderColor="{StaticResource LightGreyColor}" BackgroundColor="White">
                    <Grid x:Name="Item" Margin="5" RowSpacing="0" >
                        <Grid.RowDefinitions>
                            <RowDefinition Height="25"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition/>
                            <ColumnDefinition Width="40"/>
                        </Grid.ColumnDefinitions>
                        <StackLayout Orientation="Horizontal" Grid.Row="0" Spacing="0" Grid.Column="0" Grid.ColumnSpan="2">
                            <Label Text="{Binding Name}" TextColor="Black" VerticalTextAlignment="Center"/>
                            <Button Text="+"
                                    TextColor="#555"
                                    FontAttributes="Bold"
                                    BackgroundColor="{StaticResource ControlsBackgrounColor}"
                                    Command="{Binding Source={x:Reference thisPage}, Path = BindingContext.AddNewObjectInPropertyCommand}"
                                    CommandParameter="{Binding Source={x:Reference Item}, Path=BindingContext}"
                                    IsEnabled="{Binding Locked}"
                                    IsVisible="{Binding Locked}"
                                    Padding="0" WidthRequest="25"/>
                        </StackLayout>
                        <Button Grid.Row="0" Grid.Column="1"
                                FontFamily="{DynamicResource MaterialFontFamily}"
                                Text="{StaticResource IconTrash}" TextColor="#555"                                 
                                Command="{Binding Source={x:Reference thisPage}, Path = BindingContext.DeletePropertyCommand}"
                                CommandParameter="{Binding Source={x:Reference Item}, Path=BindingContext}"
                                BackgroundColor="Transparent"
                                Padding="0"
                                IsEnabled="{Binding Locked}"
                                IsVisible="{Binding Locked}"/>
                        <views:CheckListView ObjectGUID="{Binding}" Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="2" MinimumHeightRequest="100"/>
                    </Grid>
                </Frame>
            </DataTemplate>
            <DataTemplate x:Key="stringTemplate">
                <inputLayout:SfTextInputLayout
                                Style="{x:StaticResource SfTextInputLayoutStyle}"
                                HelperText="{Binding Name}"
                                UnfocusedColor="Black"
                        IsEnabled="{Binding Source={x:Reference thisPage}, Path = BindingContext.Locked}">
                    <Entry Text="{Binding Value}"
                               FontSize="Caption" BindingContext="{Binding}"/>
                </inputLayout:SfTextInputLayout>
            </DataTemplate>
            <DataTemplate x:Key="humanTemplate">
                <inputLayout:SfTextInputLayout
                                Style="{x:StaticResource SfTextInputLayoutStyle}"
                                HelperText="{Binding Name}"
                                UnfocusedColor="Black"
                                IsEnabled="{Binding Locked}">
                    <Entry  FontSize="Caption" IsEnabled="{Binding Locked}"/>
                </inputLayout:SfTextInputLayout>
            </DataTemplate>
            <DataTemplate x:Key="notArrayTemplate">
                <Frame x:Name="Item" Padding="0" BackgroundColor="White" BorderColor="{StaticResource LightGreyColor}">
                    <Grid Margin="5" >
                        <Grid.RowDefinitions>
                            <RowDefinition Height="20"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>
                        <StackLayout Orientation="Horizontal" Grid.Row="0">
                            <Label Text="{Binding Name}" TextColor="Black"/>
                            <Button WidthRequest="30" HeightRequest="30" 
                                    IsEnabled="{Binding Locked}"
                                    IsVisible="{Binding Locked}" Padding="1" BackgroundColor="{StaticResource ControlsBackgrounColor}"
                                    Command="{Binding Source={x:Reference thisPage}, Path = BindingContext.EditObjectCommand}"
                                    CommandParameter="{Binding Source={x:Reference Item}, Path=BindingContext}">
                                <Button.ImageSource>
                                    <FontImageSource
                                        FontFamily="{DynamicResource MaterialFontFamily}"
                                        Glyph="{StaticResource IconPencil}"
                                        Color="{StaticResource LightGreyColor}"
                                        Size="17"/>
                                </Button.ImageSource>
                            </Button>
                        </StackLayout>
                        <Label Text="{Binding Value, Converter={converters:ObjectConverter}}" Grid.Row="1"/>
                    </Grid>
                </Frame>
            </DataTemplate>
            <DataTemplate x:Key="gibridObjectTemplate">
                <Frame x:Name="Item" Padding="0" BackgroundColor="White" BorderColor="{StaticResource LightGreyColor}">
                    <Grid Margin="5" >
                        <Grid.RowDefinitions>
                            <RowDefinition Height="20"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>
                        <StackLayout Orientation="Horizontal" Grid.Row="0">
                            <Label Text="{Binding Name}" TextColor="Black"/>
                            <Button WidthRequest="30" HeightRequest="30"
                                    IsEnabled="{Binding Locked}"
                                    IsVisible="{Binding Locked}"
                                    Padding="1" BackgroundColor="{StaticResource ControlsBackgrounColor}"
                                    Command="{Binding Source={x:Reference thisPage}, Path = BindingContext.EditObjectCommand}"
                                    CommandParameter="{Binding Source={x:Reference Item}, Path=BindingContext}">
                                <Button.ImageSource>
                                    <FontImageSource
                                        FontFamily="{DynamicResource MaterialFontFamily}"
                                        Glyph="{StaticResource IconPencil}"
                                        Color="{StaticResource LightGreyColor}"
                                        Size="17"/>
                                </Button.ImageSource>
                            </Button>
                        </StackLayout>
                        <StackLayout Grid.Row="1">
                            <Label Text="{Binding Value, Converter={converters:ObjectConverter}}"/>
                            <views:CheckListView ObjectGUID="{Binding}" MinimumHeightRequest="100"/>
                        </StackLayout>
                        
                    </Grid>
                </Frame>
            </DataTemplate>
            <DataTemplate x:Key="objectTemplate">
                <Label Text="{Binding Name}"/>
            </DataTemplate>
        </ResourceDictionary>
        <local:ChecklistDataTemplateSelector x:Key="checklistDataTemplateSelector"
                                             GroupTemplate="{StaticResource groupTemplate}"
                                             BoolTemplate="{StaticResource boolTemplate}"
                                             DateTimeTemplate="{StaticResource dateTimeTemplate}"
                                             FloatTemplate="{StaticResource floatTemplate}"
                                             IntTemplate="{StaticResource intTemplate}"
                                             ObjectTemplate="{StaticResource objectTemplate}"
                                             StringTemplate="{StaticResource stringTemplate}"
                                             HumanTemplate="{StaticResource humanTemplate}"
                                             ArrayTemplate="{StaticResource arrayTemplate}"
                                             NotArrayTemplate ="{StaticResource notArrayTemplate}"
                                             GibridObjectTemplate="{StaticResource gibridObjectTemplate}"
                                             />
        
    </ContentView.Resources>
    <stateContainerDemo:StateContainer State ="{Binding States}">
        <stateContainerDemo:StateCondition Is="Normal">
            <StackLayout                
                Padding="5"
                BindableLayout.ItemsSource="{Binding Source.Result.DisplayItems}"
                BindableLayout.ItemTemplateSelector="{StaticResource checklistDataTemplateSelector}">
            </StackLayout>
        </stateContainerDemo:StateCondition>

        <stateContainerDemo:StateCondition Is="Loading">
            <ActivityIndicator IsRunning="True" Style="{x:StaticResource ActivityIndicatorStyle}"/>
        </stateContainerDemo:StateCondition>

        <stateContainerDemo:StateCondition Is="NoInternet">
            <StackLayout VerticalOptions="Center" HorizontalOptions="CenterAndExpand" Spacing="10">
                <Label Text="Отсутствует интернет-&#10;соединение" HorizontalTextAlignment="Center"/>
                <Button Text="Повторить" Style="{DynamicResource BlueButtonStyle}" IsEnabled="{Binding IsEnabled}"/>
            </StackLayout>
        </stateContainerDemo:StateCondition>

        <stateContainerDemo:StateCondition Is="NoData">
            <StackLayout Spacing="10">
                <Label Text="Данных пока нет" HorizontalOptions="Center" VerticalOptions="Center" HeightRequest="100"/>
            </StackLayout>
        </stateContainerDemo:StateCondition>

        <stateContainerDemo:StateCondition Is="NoAccess">
            <Label Text="Нет доступа" HorizontalTextAlignment="Center" VerticalOptions="Center"/>
        </stateContainerDemo:StateCondition>
    </stateContainerDemo:StateContainer>
</ContentView>