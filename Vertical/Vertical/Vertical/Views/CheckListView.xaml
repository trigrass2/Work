<?xml version="1.0" encoding="UTF-8" ?>
<ContentView xmlns="http://xamarin.com/schemas/2014/forms" 
             xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
             xmlns:sfbuttons="clr-namespace:Syncfusion.XForms.Buttons;assembly=Syncfusion.Buttons.XForms"
             xmlns:inputLayout="clr-namespace:Syncfusion.XForms.TextInputLayout;assembly=Syncfusion.Core.XForms"
             xmlns:local="clr-namespace:Vertical.CustomViews"
             xmlns:stateContainerDemo="clr-namespace:Xamarin.Forms.Essentials.Controls;assembly=Xamarin.Forms.Essentials.Controls"
             xmlns:views="clr-namespace:Vertical.Views"
             xmlns:converters="clr-namespace:Vertical.Views.Converters"
             x:Class="Vertical.Views.CheckListView"
             BackgroundColor="White"
             x:Name="thisPage">
    <ContentView.Resources>
        <ResourceDictionary>
            <DataTemplate x:Key="groupTemplate">
                <Label x:Name="groupNamelabel" 
                       IsVisible="{Binding Key, Converter={converters:GroupNameVisibleConverter}}"
                       Text="{Binding Key}" FontSize="Subtitle" FontAttributes="Bold" TextColor="Black" />
            </DataTemplate>
            <DataTemplate x:Key="boolTemplate">
                <StackLayout Orientation="Horizontal">
                    <sfbuttons:SfCheckBox Text="{Binding Name}" BindingContext="{Binding}" CheckedColor="{StaticResource OrangeColor}" StateChanged="SfCheckBox_StateChanged"
                                          FontSize="12" IsChecked="{Binding Value, Mode=TwoWay}" IsEnabled="{Binding Locked}">
                    </sfbuttons:SfCheckBox>
                </StackLayout>                
            </DataTemplate>
            <DataTemplate x:Key="dateTimeTemplate">
                <StackLayout>
                    <Label Text="{Binding Name}" Style="{x:StaticResource DefaultLabelStyle}" FontSize="Caption"/>
                    <Label Text="{Binding Value, StringFormat='{}{0:yyyy-MM-dd HH:MM }'}" FontSize="Caption"/>
                </StackLayout>
            </DataTemplate>
            <DataTemplate x:Key="floatTemplate">
                <inputLayout:SfTextInputLayout
                            Style="{x:StaticResource SfTextInputLayoutStyle}"
                            UnfocusedColor="Black"
                            HelperText="{Binding Name}"
                            Margin="0,0,0,10">
                    <Entry Text="{Binding Value, Mode=TwoWay}" Style="{x:StaticResource DefaultLabelStyle}" 
                           FontSize="Caption" BindingContext="{Binding}" Completed="Entry_Completed_float" IsEnabled="{Binding Locked}"/>
                </inputLayout:SfTextInputLayout>
            </DataTemplate>
            <DataTemplate x:Key="intTemplate">
                <inputLayout:SfTextInputLayout                            
                            Style="{x:StaticResource SfTextInputLayoutStyle}"
                            HelperText="{Binding Name}"
                            UnfocusedColor="Black">
                    <Entry Text="{Binding Value}" Style="{x:StaticResource DefaultLabelStyle}" 
                           FontSize="Caption" BindingContext="{Binding}" Completed="Entry_Completed_int" IsEnabled="{Binding Locked}"/>
                </inputLayout:SfTextInputLayout>
            </DataTemplate>
            <DataTemplate x:Key="arrangementDataTemplate">
                <Frame Padding="0" BorderColor="Gray" BackgroundColor="White">
                    <Grid x:Name="Item" Margin="5" >
                        <Grid.RowDefinitions>
                            <RowDefinition Height="20"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition/>
                        </Grid.ColumnDefinitions>
                        <StackLayout Orientation="Horizontal" Grid.Column="0" Grid.Row="0">
                            <Label Text="{Binding Name}" TextColor="Black" BackgroundColor="White"/>
                            <Button Text="+" Style="{StaticResource BlueButtonStyle}"
                                BackgroundColor="White" Padding="0" TextColor="Green" FontAttributes="Bold"
                                Command="{Binding Source={x:Reference thisPage}, Path = BindingContext.AddNewObjectInPropertyCommand}"
                                CommandParameter="{Binding Source={x:Reference Item}, Path=BindingContext}"
                                HeightRequest="30" WidthRequest="30" IsEnabled="{Binding Locked}"/>
                        </StackLayout>
                        <views:CheckListView ObjectGUID="{Binding}" Grid.Column="0" Grid.Row="1" MinimumHeightRequest="100"/>
                    </Grid>
                </Frame>
            </DataTemplate>
            <DataTemplate x:Key="stringTemplate">
                <StackLayout>
                    <inputLayout:SfTextInputLayout
                                Style="{x:StaticResource SfTextInputLayoutStyle}"
                                HelperText="{Binding Name}"
                                UnfocusedColor="Black">
                        <Entry Text="{Binding Value}" Style="{x:StaticResource DefaultLabelStyle}" 
                               FontSize="Caption" BindingContext="{Binding}" Completed="Entry_Completed_string" IsEnabled="{Binding Locked}"/>
                    </inputLayout:SfTextInputLayout>
                </StackLayout>
                
            </DataTemplate>
            <DataTemplate x:Key="humanTemplate">
                <StackLayout>
                    
                    <inputLayout:SfTextInputLayout
                                Style="{x:StaticResource SfTextInputLayoutStyle}"
                                HelperText="{Binding Name}"
                                UnfocusedColor="Black"
                                >
                        <Entry  Style="{x:StaticResource DefaultLabelStyle}" FontSize="Caption" IsEnabled="{Binding Locked}"/>
                    </inputLayout:SfTextInputLayout>
                </StackLayout>
                
            </DataTemplate>

            <DataTemplate x:Key="objectTemplate">
                <Label Text="{Binding Name}"/>
            </DataTemplate>
            
            <DataTemplate x:Key="postDataTemplate">
                <Frame Padding="0" BorderColor="Gray" BackgroundColor="White">
                    <Grid x:Name="Item" Margin="5" >
                        <Grid.RowDefinitions>
                            <RowDefinition Height="20"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition/>
                        </Grid.ColumnDefinitions>
                        <StackLayout Orientation="Horizontal" Grid.Column="0" Grid.Row="0">
                            <Button Text="+" Style="{StaticResource BlueButtonStyle}"
                                BackgroundColor="White" Padding="0" TextColor="Green" FontAttributes="Bold"
                                Command="{Binding Source={x:Reference thisPage}, Path = BindingContext.AddNewObjectInPropertyCommand}" 
                                CommandParameter="{Binding Source={x:Reference Item}, Path=BindingContext}"
                                HeightRequest="30" WidthRequest="30" IsEnabled="{Binding Locked}"/>
                        </StackLayout>

                        <Label Text="{Binding Value, Converter={converters:ObjectConverter}}" Grid.Column="0" Grid.Row="1"
                               BackgroundColor="White"/>
                    </Grid>
                </Frame>
                
            </DataTemplate>

            <DataTemplate x:Key="catalogDataTemplate">
                <Frame Padding="0" BorderColor="Gray" BackgroundColor="White">
                    <Grid x:Name="Item" Margin="5" >
                        <Grid.RowDefinitions>
                            <RowDefinition Height="20"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition/>
                        </Grid.ColumnDefinitions>
                        <StackLayout Orientation="Horizontal" Grid.Column="0" Grid.Row="0">
                            <Label Text="{Binding Name}" TextColor="Black" BackgroundColor="White"/>
                            <Button Text="+" Style="{StaticResource BlueButtonStyle}"
                                BackgroundColor="White" Padding="0" TextColor="Green" FontAttributes="Bold"
                                Command="{Binding Source={x:Reference thisPage}, Path = BindingContext.AddNewObjectInPropertyCommand}" 
                                CommandParameter="{Binding Source={x:Reference Item}, Path=BindingContext}"
                                HeightRequest="30" WidthRequest="30" IsEnabled="{Binding Locked}"/>
                        </StackLayout>
                        <views:CheckListView ObjectGUID="{Binding}" Grid.Column="0" Grid.Row="1" MinimumHeightRequest="100"/>
                    </Grid>
                </Frame>
            </DataTemplate>

            <DataTemplate x:Key="profiDataTemplate">
                <Frame Padding="0" BorderColor="Gray" BackgroundColor="White">
                    <Grid x:Name="Item" Margin="5" >
                        <Grid.RowDefinitions>
                            <RowDefinition Height="20"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition/>
                        </Grid.ColumnDefinitions>
                        <StackLayout Orientation="Horizontal" Grid.Column="0" Grid.Row="0">
                            <Label Text="{Binding Name}" TextColor="Black" BackgroundColor="White"/>
                            <Button Text="+" Style="{StaticResource BlueButtonStyle}"
                                BackgroundColor="White" Padding="0" TextColor="Green" FontAttributes="Bold"
                                Command="{Binding Source={x:Reference thisPage}, Path = BindingContext.AddNewObjectInPropertyCommand}" 
                                CommandParameter="{Binding Source={x:Reference Item}, Path=BindingContext}"
                                HeightRequest="30" WidthRequest="30" IsEnabled="{Binding Locked}"/>
                        </StackLayout>

                        <Label Text="{Binding Value, Converter={converters:ObjectConverter}}" Grid.Column="0" Grid.Row="1"
                               BackgroundColor="White"/>
                    </Grid>
                </Frame>
            </DataTemplate>

            <DataTemplate x:Key="craneDataTemplate">
                <Frame Padding="0" BorderColor="Gray" BackgroundColor="White">
                    <Grid x:Name="Item" Margin="5" >
                        <Grid.RowDefinitions>
                            <RowDefinition Height="20"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition/>
                        </Grid.ColumnDefinitions>
                        <StackLayout Orientation="Horizontal" Grid.Column="0" Grid.Row="0">
                            <Label Text="{Binding Name}" TextColor="Black" BackgroundColor="White"/>
                            <Button Text="+" Style="{StaticResource BlueButtonStyle}"
                                BackgroundColor="White" Padding="0" TextColor="Green" FontAttributes="Bold"
                                Command="{Binding Source={x:Reference thisPage}, Path = BindingContext.AddNewObjectInPropertyCommand}" 
                                CommandParameter="{Binding Source={x:Reference Item}, Path=BindingContext}"
                                HeightRequest="30" WidthRequest="30" IsEnabled="{Binding Locked}"/>
                        </StackLayout>
                        <views:CheckListView ObjectGUID="{Binding}" Grid.Column="0" Grid.Row="1" MinimumHeightRequest="100"/>
                    </Grid>
                </Frame>
            </DataTemplate>
            <DataTemplate x:Key="humanWithProfiDataTemplate">
                <Frame Padding="0" BorderColor="Gray" BackgroundColor="White">
                    <Grid x:Name="Item" Margin="5" >
                        <Grid.RowDefinitions>
                            <RowDefinition Height="20"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition/>
                        </Grid.ColumnDefinitions>
                        <StackLayout Orientation="Horizontal" Grid.Column="0" Grid.Row="0">
                            <Label Text="{Binding Name}" TextColor="Black" BackgroundColor="White"/>
                            <Button Text="+" Style="{StaticResource BlueButtonStyle}"
                                BackgroundColor="White" Padding="0" TextColor="Green" FontAttributes="Bold"
                                Command="{Binding Source={x:Reference thisPage}, Path = BindingContext.AddNewObjectInPropertyCommand}" 
                                CommandParameter="{Binding Source={x:Reference Item}, Path=BindingContext}"
                                HeightRequest="30" WidthRequest="30" IsEnabled="{Binding Locked}"/>
                        </StackLayout>
                        <views:CheckListView ObjectGUID="{Binding}" Grid.Column="0" Grid.Row="1" MinimumHeightRequest="100"/>
                    </Grid>
                </Frame>
            </DataTemplate>

        </ResourceDictionary>
        <local:ChecklistDataTemplateSelector x:Key="checklistDataTemplateSelector"
                                             GroupTemplate="{StaticResource groupTemplate}"
                                             BoolTemplate="{StaticResource boolTemplate}"
                                             DateTimeTemplate="{StaticResource dateTimeTemplate}"
                                             FloatTemplate="{StaticResource floatTemplate}"
                                             IntTemplate="{StaticResource intTemplate}"
                                             ObjectTemplate="{StaticResource objectTemplate}"
                                             StringTemplate="{StaticResource stringTemplate}"
                                             HumanTemplate="{StaticResource humanTemplate}"
                                             ArrangementDataTemplate="{StaticResource arrangementDataTemplate}"
                                             PostDataTemplate="{StaticResource postDataTemplate}"
                                             CatalogDataTemplate="{StaticResource catalogDataTemplate}"
                                             ProfiDataTemplate="{StaticResource profiDataTemplate}"
                                             CraneDataTemplate="{StaticResource craneDataTemplate}"
                                             HumanWithProfiDataTemplate="{StaticResource humanWithProfiDataTemplate}"/>
        
    </ContentView.Resources>
    <stateContainerDemo:StateContainer State ="{Binding States}">
        <stateContainerDemo:StateCondition Is="Normal">
            <StackLayout
                Padding="5"
                BindableLayout.ItemsSource="{Binding SourceObjects.DisplayItems}"
                BindableLayout.ItemTemplateSelector="{StaticResource checklistDataTemplateSelector}">
            </StackLayout>
            <!--<Grid Margin="5">
                <Grid.RowDefinitions>
                    <RowDefinition />
                    <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>
                --><!--<ScrollView Grid.Row="0">
                    
<Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition />
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition/>
                            <ColumnDefinition Width="85"/>
                        </Grid.ColumnDefinitions>
                        <Label
                            x:Name="titleLabel"
                            Text="{Binding SystemObjectModel.Name}"
                            FontSize="Title" TextColor="Black"
                            HeightRequest="35"
                            Grid.Column="0" Grid.Row="0"
                            IsVisible="{Binding IsVisibleButtons}"/>
                        <StackLayout Orientation="Horizontal" Spacing="1" Grid.Row="0" Grid.Column="1" IsVisible="{Binding IsVisibleButtons}">
                            <Button BackgroundColor="{StaticResource BackgroundColor}"
                                    BorderWidth="1" BorderColor="{StaticResource DarkGreyColor}"
                                    HeightRequest="35" WidthRequest="40">
                                <Button.ImageSource>
                                    <FontImageSource
                                        FontFamily="{DynamicResource MaterialFontFamily}"
                                        Glyph="{StaticResource IconTrash}"
                                        Color="{StaticResource DarkGreyColor}"
                                        Size="17"/>
                                </Button.ImageSource>
                            </Button>
                            <Button BackgroundColor="{StaticResource BackgroundColor}" 
                                    BorderWidth="1" BorderColor="{StaticResource DarkGreyColor}" 
                                    HeightRequest="35" WidthRequest="40">
                                <Button.ImageSource>
                                    <FontImageSource
                                        FontFamily="{DynamicResource MaterialFontFamily}"
                                        Glyph="{StaticResource IconCopy}"
                                        Color="{StaticResource DarkGreyColor}"
                                        Size="17"/>
                                </Button.ImageSource>
                            </Button>
                        </StackLayout>
                        <StackLayout
                            Grid.Column="0" Grid.ColumnSpan="2" Grid.Row="1"
                            BindableLayout.ItemsSource="{Binding SourceObjects.DisplayItems}"
                            BindableLayout.ItemTemplateSelector="{StaticResource checklistDataTemplateSelector}">
                        </StackLayout>
                    </Grid>
                    
                </ScrollView>-->
                
                <!--<Button 
                    Grid.Row="1"
                    x:Name="addNewObjectButton"                    
                    BackgroundColor="#41a32e"
                    Command="{Binding SavePropertiesValuesCommand}"
                    HeightRequest="50" WidthRequest="50"
                    CornerRadius="30"
                    IsEnabled="{Binding IsEnabled}"
                    IsVisible="{Binding IsVisibleSaveButton, Mode=TwoWay}"
                    Text="Сохранить"
                    TextColor="White"
                    FontAttributes="Bold"/>--><!--
            </Grid>-->
        </stateContainerDemo:StateCondition>

        <stateContainerDemo:StateCondition Is="Loading">
            <ActivityIndicator IsRunning="True" Style="{x:StaticResource ActivityIndicatorStyle}"/>
        </stateContainerDemo:StateCondition>

        <stateContainerDemo:StateCondition Is="NoInternet">
            <StackLayout VerticalOptions="Center" HorizontalOptions="Center" Spacing="10">
                <Label Text="Отсутствует интернет-&#10;соединение" HorizontalTextAlignment="Center"/>
                <Button Text="Повторить" Command="{Binding UpdateContentCommand}" Style="{DynamicResource BlueButtonStyle}" IsEnabled="{Binding IsEnabled}"/>
            </StackLayout>
        </stateContainerDemo:StateCondition>

        <stateContainerDemo:StateCondition Is="NoData" >
            <StackLayout VerticalOptions="Center" HorizontalOptions="Center" Spacing="10">
                <Label Text="Данных пока нет" HorizontalTextAlignment="Center" HeightRequest="100"/>
            </StackLayout>
        </stateContainerDemo:StateCondition>

        <stateContainerDemo:StateCondition Is="NoAccess">
            <Label Text="Нет доступа" HorizontalTextAlignment="Center" VerticalOptions="Center"/>
        </stateContainerDemo:StateCondition>
    </stateContainerDemo:StateContainer>
</ContentView>