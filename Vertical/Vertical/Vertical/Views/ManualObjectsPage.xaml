<?xml version="1.0" encoding="utf-8" ?>
<ContentPage xmlns="http://xamarin.com/schemas/2014/forms"
             xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
             xmlns:stateContainerDemo="clr-namespace:Xamarin.Forms.Essentials.Controls;assembly=Xamarin.Forms.Essentials.Controls"
             xmlns:local="clr-namespace:Vertical.CustomViews"
             x:Class="Vertical.Views.ManualObjectsPage"
             x:Name="Page"
             Title="Объекты">
    <ContentPage.Resources>
        <ResourceDictionary>
            <DataTemplate x:Key="checkListDataTemplate">
                <ViewCell>
                    <ViewCell.View>
                        <Grid x:Name="Item" ColumnSpacing="0">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="1*"/>
                                <ColumnDefinition Width="5*"/>
                                <ColumnDefinition Width="1*"/>
                            </Grid.ColumnDefinitions>
                            <Label Grid.Column="0" Text="{StaticResource IconFile}" FontFamily="{DynamicResource MaterialFontFamily}" 
                                   TextColor="{StaticResource LightGreyColor}" FontSize="Large" VerticalTextAlignment="Center" HorizontalTextAlignment="Center">
                                <Label.Triggers>
                                    <DataTrigger Binding="{Binding Template}" TargetType="Label" Value="true">
                                        <Setter Property="Text" Value="{StaticResource IconTemplate}"/>
                                        <Setter Property="TextColor" Value="{StaticResource DarkGreyColor}"/>
                                    </DataTrigger>
                                </Label.Triggers>
                            </Label>
                            <Label x:Name="nameObjectLabel" 
                                   Text="{Binding Name}" TextColor="Black" 
                                   VerticalTextAlignment="Center" FontSize="Body"
                                   HorizontalTextAlignment="Start"
                                   Grid.Column="1"/>
                            <Button
                                Grid.Column="2"
                                FontFamily="{DynamicResource MaterialFontFamily}"
                                FontSize="Large"
                                Text="{StaticResource IconPencil}" TextColor="{StaticResource LightGreyColor}"                                
                                Command="{Binding Source={x:Reference Page}, Path = BindingContext.GoToEditObjectPageCommand}" 
                                CommandParameter="{Binding Source={x:Reference Item}, Path=BindingContext}"
                                HorizontalOptions="End"                                
                                BackgroundColor="Transparent"
                                IsEnabled="{Binding Source={x:Reference Page}, Path = BindingContext.IsEnabled}">
                            </Button>
                        </Grid>
                    </ViewCell.View>
                </ViewCell>
            </DataTemplate>
            <DataTemplate x:Key="folderDataTemplate">
                <ViewCell>
                    <ViewCell.View>
                        <Grid x:Name="Item" ColumnSpacing="0">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="1*"/>
                                <ColumnDefinition Width="6*"/>
                                <ColumnDefinition Width="1*"/>
                            </Grid.ColumnDefinitions>
                            <Label Grid.Column="0" Text="{StaticResource IconFolder}" FontFamily="{DynamicResource MaterialFontFamily}" 
                                   TextColor="Wheat" FontSize="Large" VerticalTextAlignment="Center" HorizontalTextAlignment="Center"/>
                            <Label x:Name="nameObjectLabel"
                                   Grid.Column="1"
                                   Text="{Binding Name}"
                                   TextColor="Black" FontSize="Body"
                                   VerticalTextAlignment="Center"
                                   HorizontalTextAlignment="Start"/>
                            <Button
                                Grid.Column="2"
                                FontFamily="{DynamicResource MaterialFontFamily}"
                                FontSize="Large"
                                Text="{StaticResource IconPencil}" TextColor="{StaticResource LightGreyColor}"                                
                                Command="{Binding Source={x:Reference Page}, Path = BindingContext.GoToEditObjectPageCommand}" 
                                CommandParameter="{Binding Source={x:Reference Item}, Path=BindingContext}"
                                HorizontalOptions="End"                                
                                BackgroundColor="Transparent"
                                IsEnabled="{Binding Source={x:Reference Page}, Path = BindingContext.IsEnabled}">
                            </Button>
                        </Grid>
                    </ViewCell.View>
                </ViewCell>
            </DataTemplate>
            <DataTemplate x:Key="objectDataTemplate">
                <ViewCell>
                    <ViewCell.View>
                        <Grid x:Name="Item" ColumnSpacing="0">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="1*"/>
                                <ColumnDefinition Width="6*"/>
                                <ColumnDefinition Width="1*"/>
                            </Grid.ColumnDefinitions>

                            <Label Grid.Column="0" Text="{StaticResource IconQuestion}" FontFamily="{DynamicResource MaterialFontFamily}" 
                                   TextColor="{StaticResource LightGreyColor}" FontSize="Large" VerticalTextAlignment="Center" HorizontalTextAlignment="Center">
                                <Label.Triggers>
                                    <DataTrigger Binding="{Binding Template}" TargetType="Label" Value="true">
                                        <Setter Property="Text" Value="{StaticResource IconTemplate}"/>
                                        <Setter Property="TextColor" Value="{StaticResource DarkGreyColor}"/>
                                    </DataTrigger>
                                </Label.Triggers>
                            </Label>
                            
                            <Label  x:Name="nameObjectLabel" Text="{Binding Name}" 
                                    TextColor="Black" VerticalTextAlignment="Center" FontSize="Body"
                                    HorizontalTextAlignment="Start"
                                    Grid.Column="1"/>
                            <Button
                                Grid.Column="2"
                                FontFamily="{DynamicResource MaterialFontFamily}"
                                FontSize="Large"
                                Text="{StaticResource IconPencil}" TextColor="{StaticResource LightGreyColor}"                                
                                Command="{Binding Source={x:Reference Page}, Path = BindingContext.GoToEditObjectPageCommand}" 
                                CommandParameter="{Binding Source={x:Reference Item}, Path=BindingContext}"
                                HorizontalOptions="End"                                
                                BackgroundColor="Transparent"
                                IsEnabled="{Binding Source={x:Reference Page}, Path = BindingContext.IsEnabled}">
                            </Button>
                        </Grid>
                    </ViewCell.View>
                </ViewCell>
            </DataTemplate>
            <local:ImageObjectDataTemplateSelector x:Key="imageObjectDataTemplateSelector"
                                                   CheckListDataTemplate="{StaticResource checkListDataTemplate}"
                                                   FolderDataTemplate="{StaticResource folderDataTemplate}"
                                                   ObjectDataTemplate="{StaticResource objectDataTemplate}"/>
        </ResourceDictionary>
    </ContentPage.Resources>
    <stateContainerDemo:StateContainer State ="{Binding States}">
        <stateContainerDemo:StateCondition Is="Normal">
            <ListView 
                    x:Name="listTypesModels" ItemsSource="{Binding SystemObjectModels}"
                    Margin="3,0,5,7" SelectedItem="{Binding SelectedObject, Mode=TwoWay}"                    
                    CachingStrategy="RecycleElement" IsEnabled="{Binding IsEnabled}"
                    ItemTemplate="{StaticResource imageObjectDataTemplateSelector }"
                    Header="{Binding Title}"
                    SeparatorVisibility="None">
            </ListView>
            <!--<RelativeLayout HorizontalOptions="FillAndExpand" VerticalOptions="FillAndExpand">
                <ListView 
                    x:Name="listTypesModels" ItemsSource="{Binding SystemObjectModels}"
                    Margin="3,0,5,7" SelectedItem="{Binding SelectedObject, Mode=TwoWay}"
                    RelativeLayout.YConstraint="{ConstraintExpression Type=RelativeToParent, Property=Y, Factor=0, Constant=5}"
                    RelativeLayout.HeightConstraint="{ConstraintExpression Type=RelativeToParent, Property=Height, Factor=1, Constant=-50}"
                    RelativeLayout.WidthConstraint="{ConstraintExpression Type=RelativeToParent, Property=Width, Factor=1}"
                    CachingStrategy="RecycleElement" IsEnabled="{Binding IsEnabled}"
                    ItemTemplate="{StaticResource imageObjectDataTemplateSelector }"
                    Header="{Binding Title}"
                    SeparatorVisibility="None">
                </ListView>
                <Button                    
                    x:Name="addNewObjectButton"
                    IsVisible="{Binding IsVisible}"
                    Padding="0"
                    Text="Архив" TextColor="{StaticResource DarkGreyColor}"
                    FontSize="Caption"
                    BackgroundColor="Transparent"                    
                    Command="{Binding GoToAddNewObjectPageCommand}"
                    HeightRequest="35" WidthRequest="50"
                    RelativeLayout.XConstraint="{ConstraintExpression Type=RelativeToParent, Property=Width, Factor=0.5, Constant=-25}"
                    RelativeLayout.YConstraint="{ConstraintExpression Type=RelativeToParent, Property=Height, Factor=1, Constant=-45}"
                    IsEnabled="{Binding IsEnabled}"/>
            </RelativeLayout>-->
            
        </stateContainerDemo:StateCondition>

        <stateContainerDemo:StateCondition Is="Loading">
            <ActivityIndicator IsRunning="True" Style="{x:StaticResource ActivityIndicatorStyle}"/>
        </stateContainerDemo:StateCondition>
        
        <stateContainerDemo:StateCondition Is="NoInternet">
            <StackLayout VerticalOptions="Center" HorizontalOptions="Center" Spacing="10">
                <Label Text="Отсутствует интернет-&#10;соединение" HorizontalTextAlignment="Center"/>
                <Button Text="Повторить" Command="{Binding UpdateContentCommand}" Style="{DynamicResource BlueButtonStyle}" IsEnabled="{Binding IsEnabled}"/>
            </StackLayout>
        </stateContainerDemo:StateCondition>
        
        <stateContainerDemo:StateCondition Is="NoData">            
            <StackLayout VerticalOptions="Center" HorizontalOptions="Center" Spacing="10">
                <Label Text="Данных пока нет" HorizontalTextAlignment="Center"/>
                <Button Text="Добавить" Style="{DynamicResource BlueButtonStyle}" Command="{Binding GoToAddNewObjectPageCommand}" IsEnabled="{Binding IsEnabled}"/>
            </StackLayout>
        </stateContainerDemo:StateCondition>
        
        <stateContainerDemo:StateCondition Is="NoAccess">
            <Label Text="Нет доступа" HorizontalTextAlignment="Center" VerticalOptions="Center"/>
        </stateContainerDemo:StateCondition>
    </stateContainerDemo:StateContainer>    
</ContentPage>